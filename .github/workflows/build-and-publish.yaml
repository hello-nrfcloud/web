name: Build and Release

on: push

permissions:
  id-token: write
  contents: write
  issues: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_REGION: eu-north-1
  AWS_ACCOUNT_ID: 812555912232
  STACK_NAME: nrf-guide-web
  CLOUDFRONT_DISTRIBUTION: EWW417GN4G5NJ

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Keep npm cache around to speed up installs
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Build
        env:
          VERSION: ${{ github.sha }}
        run: |
          npm run build
          cp -L -r ./static ./build/client

      - name: Cache AWS CLI (Linux)
        id: cache-aws-cli
        uses: actions/cache@v3
        with:
          path: aws/
          key: cache-aws-cli

      - name: Install AWS
        if: steps.cache-aws-cli.outputs.cache-hit != 'true'
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume:
            arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.STACK_NAME }}-cd
          role-session-name: gh-actions-publish
          aws-region: ${{ env.AWS_REGION }}

      - name: Get bucket name
        run:
          echo "BUCKET_NAME=`aws cloudformation describe-stacks --stack-name ${{
          env.STACK_NAME }} | jq -r '.Stacks[0].Outputs[] | select(.OutputKey ==
          "bucketName") | .OutputValue' | sed -E 's/\/$//g'`" >> $GITHUB_ENV

      - name: Upload build
        run: |
          aws s3 sync build/client s3://${{ env.BUCKET_NAME }}

      - name: Set cache metadata
        run: |
          # All files to 1 year
          aws s3 cp s3://${{ env.BUCKET_NAME }} s3://${{ env.BUCKET_NAME }} --recursive --cache-control max-age=30758400,public
          # HTML files to 10 minutes
          aws s3 cp s3://${{ env.BUCKET_NAME }} s3://${{ env.BUCKET_NAME }} --exclude "*" --include "*.html" --recursive --cache-control max-age=600,public

      - name:
          Trigger CloudFront cache invalidation for index.html (all other files
          have unique names)
        run: |
          CLOUDFRONT_DISTRIBUTION=`aws cloudformation describe-stacks --stack-name ${{ env.STACK_NAME }} | jq -r '.Stacks[0].Outputs[] | select(.OutputKey == "distributionId") | .OutputValue' | sed -E 's/\/$//g'`
          aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION} --paths /,/index.html

      - name: Semantic release
        continue-on-error: true
        run: npx semantic-release
